events { 
    worker_connections 1024;
}

http { 
    proxy_cache_path /nginx_cache keys_zone=mycache:10m;

    upstream grafana {
        server grafana:3000;
    }

    upstream users_web_service {
        server users_web_service:3000;
    }

    upstream tweets_web_service {
        server tweets_web_service:3000;
    }

    server {
        proxy_cache mycache;

        listen 80;

        location /robots.txt {
            return 200 'User-agent: *\nDisallow: /';
        }

        location /nginx_status {
        	stub_status;
            # Docker will take care of the "grafana" host name
        	allow 127.0.0.1;
        	deny all;
        }

        location /tweets {
            proxy_cache_min_uses 1;
            proxy_cache_valid any 30s;

            add_header X-Cache-Status $upstream_cache_status;

            proxy_pass http://tweets_web_service;
        }


        location / {
            proxy_cache_min_uses 1;
            proxy_cache_valid any 30s;

            add_header X-Cache-Status $upstream_cache_status;

            proxy_pass http://users_web_service;
        }

    }
}
